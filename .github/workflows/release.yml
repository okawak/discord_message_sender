name: Release Plugin

on:
  push:
    tags:
      - "*"

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Update version in package.json
        run: |
          sed -i 's/"version": "[^"]*"/"version": "${{ steps.get_version.outputs.VERSION }}"/' package.json

      - name: Update version in manifest.json
        run: |
          sed -i 's/"version": "[^"]*"/"version": "${{ steps.get_version.outputs.VERSION }}"/' manifest.json

      - name: Update version in Cargo.toml
        run: |
          sed -i '/^\[workspace\.package\]/,/^\[/ s/^version = "[^"]*"/version = "${{ steps.get_version.outputs.VERSION }}"/' Cargo.toml

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: wasm32-unknown-unknown
          cache-workspaces: |
            parse_message

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build plugin
        run: bun run build

      - name: Commit and Push Version Updates
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "Update version to ${{ steps.get_version.outputs.VERSION }}" || exit 0
          git push origin HEAD:main

      - name: Create release archive
        run: |
          cd dist
          zip -r ../discord-message-sender-${{ github.ref_name }}.zip .

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            discord-message-sender-${{ github.ref_name }}.zip
            dist/manifest.json
            dist/main.js
            dist/parse_message_bg.wasm
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
